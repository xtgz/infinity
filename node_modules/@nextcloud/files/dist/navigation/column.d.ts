import { Node } from '../files/node';
import { View } from './view';
interface ColumnData {
    /** Unique column ID */
    id: string;
    /** Translated column title */
    title: string;
    /** The content of the cell. The element will be appended within */
    render: (node: Node, view: View) => HTMLElement;
    /** Function used to sort Nodes between them */
    sort?: (nodeA: Node, nodeB: Node) => number;
    /**
     * Custom summary of the column to display at the end of the list.
     * Will not be displayed if  nothing is provided
     */
    summary?: (node: Node[], view: View) => string;
}
export declare class Column implements ColumnData {
    private _column;
    constructor(column: ColumnData);
    get id(): string;
    get title(): string;
    get render(): (node: Node, view: View) => HTMLElement;
    get sort(): ((nodeA: Node, nodeB: Node) => number) | undefined;
    get summary(): ((node: Node[], view: View) => string) | undefined;
}
export {};
