import { Folder } from './files/folder';
import { View } from './navigation/view';
export interface HeaderData {
    /** Unique ID */
    id: string;
    /** Order */
    order: number;
    /** Condition wether this header is shown or not */
    enabled?: (folder: Folder, view: View) => boolean;
    /** Executed when file list is initialized */
    render: (el: HTMLElement, folder: Folder, view: View) => void;
    /** Executed when root folder changed */
    updated(folder: Folder, view: View): any;
}
export declare class Header {
    private _header;
    constructor(header: HeaderData);
    get id(): string;
    get order(): number;
    get enabled(): ((folder: Folder, view: View) => boolean) | undefined;
    get render(): (el: HTMLElement, folder: Folder, view: View) => void;
    get updated(): (folder: Folder, view: View) => any;
    private validateHeader;
}
export declare const registerFileListHeaders: (header: Header) => void;
export declare const getFileListHeaders: () => Header[];
