import { Permission } from '../permissions';
import { NodeStatus } from './node';
export interface Attribute {
    [key: string]: any;
}
export interface NodeData {
    /** Unique ID */
    id?: number;
    /**
     * URL to the resource.
     * e.g. https://cloud.domain.com/remote.php/dav/files/emma/Photos/picture.jpg
     * or https://domain.com/Photos/picture.jpg
     */
    source: string;
    /** Last modified time */
    mtime?: Date;
    /** Creation time */
    crtime?: Date;
    /** The mime type Optional for folders only */
    mime?: string;
    /** The node size type */
    size?: number;
    /** The node permissions */
    permissions?: Permission;
    /** The owner  UID of this node */
    owner: string | null;
    /** Optional the displayname of this node */
    displayname?: string;
    /** The node attributes */
    attributes?: Attribute;
    /**
     * The absolute root of the home relative to the service.
     * It is highly recommended to provide that information.
     * e.g. /files/emma
     */
    root?: string;
    /** The node status */
    status?: NodeStatus;
}
/**
 * Check if a node source is from a specific DAV service
 *
 * @param source The source to check
 * @param davService Pattern to check if source is DAV resource
 */
export declare const isDavResource: (source: string, davService: RegExp) => boolean;
/**
 * Validate Node construct data
 *
 * @param data The node data
 * @param davService Pattern to check if source is DAV ressource
 */
export declare const validateData: (data: NodeData, davService: RegExp) => void;
