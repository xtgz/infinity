import { Folder, Node } from './index';
export declare enum NewMenuEntryCategory {
    /**
     * For actions where the user is intended to upload from their device
     */
    UploadFromDevice = 0,
    /**
     * For actions that create new nodes on the server without uploading
     */
    CreateNew = 1,
    /**
     * For everything not matching the other categories
     */
    Other = 2
}
export interface Entry {
    /** Unique ID */
    id: string;
    /**
     * Category to put this entry in
     * (supported since Nextcloud 30)
     * @since 3.3.0
     * @default NewMenuEntryCategory.CreateNew
     */
    category?: NewMenuEntryCategory;
    /** Translatable string displayed in the menu */
    displayName: string;
    /**
     * Condition wether this entry is shown or not
     * @param context the creation context. Usually the current folder
     */
    enabled?: (context: Folder) => boolean;
    /**
     * Either iconSvgInline or iconClass must be defined
     * Svg as inline string. <svg><path fill="..." /></svg>
     */
    iconSvgInline?: string;
    /**
     * Existing icon css class
     * @deprecated use iconSvgInline instead
     */
    iconClass?: string;
    /** Order of the entry in the menu */
    order?: number;
    /**
     * Function to be run after creation
     * @param context the creation context. Usually the current folder
     * @param content list of file/folders present in the context folder
     */
    handler: (context: Folder, content: Node[]) => void;
}
export declare class NewFileMenu {
    private _entries;
    registerEntry(entry: Entry): void;
    unregisterEntry(entry: Entry | string): void;
    /**
     * Get the list of registered entries
     *
     * @param {Folder} context the creation context. Usually the current folder
     */
    getEntries(context?: Folder): Array<Entry>;
    private getEntryIndex;
    private validateEntry;
}
export declare const getNewFileMenu: () => NewFileMenu;
