import { Folder } from './files/folder.ts';
import { Node } from './files/node.ts';
import { View } from './navigation/view.ts';
interface FileListActionData {
    /** Unique ID */
    id: string;
    /** Translated name of the action */
    displayName: (view: View) => string;
    /** Raw svg string */
    iconSvgInline?: (view: View) => string;
    /** Sort order */
    order: number;
    /**
     * Condition whether this action is shown or not
     * @param view The current view
     * @param nodes The nodes in the current directory
     * @param folder The current folder
     */
    enabled?: (view: View, nodes: Node[], folder: Folder) => boolean;
    /**
     * Function executed on single file action
     * @return true if the action was executed successfully,
     * false otherwise and null if the action is silent/undefined.
     * @throws Error if the action failed
     */
    exec: (view: View, nodes: Node[], folder: Folder) => Promise<boolean | null>;
}
export declare class FileListAction {
    private _action;
    constructor(action: FileListActionData);
    get id(): string;
    get displayName(): (view: View) => string;
    get iconSvgInline(): ((view: View) => string) | undefined;
    get order(): number;
    get enabled(): ((view: View, nodes: Node[], folder: Folder) => boolean) | undefined;
    get exec(): (view: View, nodes: Node[], folder: Folder) => Promise<boolean | null>;
    private validateAction;
}
export declare const registerFileListAction: (action: FileListAction) => void;
export declare const getFileListActions: () => FileListAction[];
export {};
