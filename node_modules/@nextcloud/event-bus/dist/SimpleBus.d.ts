import { GenericEvents, NextcloudEvents } from './Event.js';
import { EventBus } from './EventBus.js';
import { EventHandler } from './EventHandler.js';
import { IsUndefined } from './types.ts';
export declare class SimpleBus<E extends GenericEvents = NextcloudEvents> implements EventBus<E> {
    private handlers;
    getVersion(): string;
    subscribe<EventName extends keyof E>(name: EventName, handler: EventHandler<E[EventName]>): void;
    unsubscribe<EventName extends keyof E>(name: EventName, handler: EventHandler<E[EventName]>): void;
    emit<EventName extends keyof E>(name: EventName, ...event: IsUndefined<E[EventName]> extends true ? [] : [E[EventName]]): void;
}
