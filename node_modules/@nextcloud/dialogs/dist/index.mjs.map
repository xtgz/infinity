{"version":3,"file":"index.mjs","sources":["../lib/utils/dialogs.ts","../node_modules/@mdi/svg/svg/folder-move.svg?raw","../node_modules/@mdi/svg/svg/folder-multiple.svg?raw","../lib/filepicker-builder.ts","../lib/components/types.ts","../lib/components/GenericDialog.vue","../lib/dialogs.ts"],"sourcesContent":["/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\nimport type { AsyncComponent, Component } from 'vue'\n\nimport Vue, { toRaw } from 'vue'\n\n/**\n * Helper to spawn a Vue dialog without having to mount it from a component\n *\n * @param dialog The dialog component to spawn\n * @param props Properties to pass to the dialog\n * @param onClose Callback when the dialog is closed\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const spawnDialog = (dialog: Component | AsyncComponent, props: any, onClose: (...rest: unknown[]) => void = () => {}): Vue => {\n\tconst el = document.createElement('div')\n\n\tconst container: HTMLElement = document.querySelector(props?.container) || document.body\n\tcontainer.appendChild(el)\n\n\tconst vue = new Vue({\n\t\tel,\n\t\tname: 'VueDialogHelper',\n\t\trender: (h) =>\n\t\t\th(dialog, {\n\t\t\t\tprops,\n\t\t\t\ton: {\n\t\t\t\t\tclose: (...rest: unknown[]) => {\n\t\t\t\t\t\tonClose(...rest.map(v => toRaw(v)))\n\t\t\t\t\t\tvue.$destroy()\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t}),\n\t})\n\treturn vue\n}\n","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"mdi-folder-move\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M14,18V15H10V11H14V8L19,13M20,6H12L10,4H4C2.89,4 2,4.89 2,6V18A2,2 0 0,0 4,20H20A2,2 0 0,0 22,18V8C22,6.89 21.1,6 20,6Z\\\" /></svg>\"","export default \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\" id=\\\"mdi-folder-multiple\\\" viewBox=\\\"0 0 24 24\\\"><path d=\\\"M22,4H14L12,2H6A2,2 0 0,0 4,4V16A2,2 0 0,0 6,18H22A2,2 0 0,0 24,16V6A2,2 0 0,0 22,4M2,6H0V11H0V20A2,2 0 0,0 2,22H20V20H2V6Z\\\" /></svg>\"","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { IFilePickerButton, IFilePickerButtonFactory, IFilePickerFilter } from './components/types'\nimport type { Node } from '@nextcloud/files'\n\nimport { basename } from 'path'\nimport { spawnDialog } from './utils/dialogs'\nimport { n, t } from './utils/l10n'\n\nimport IconMove from '@mdi/svg/svg/folder-move.svg?raw'\nimport IconCopy from '@mdi/svg/svg/folder-multiple.svg?raw'\n\n/**\n * @deprecated\n */\nexport enum FilePickerType {\n\tChoose = 1,\n\tMove = 2,\n\tCopy = 3,\n\tCopyMove = 4,\n\tCustom = 5,\n}\n\n/**\n * Error that is thrown in the rejected promise when the FilePicker was closed\n */\nexport class FilePickerClosed extends Error {}\n\nexport class FilePicker<IsMultiSelect extends boolean> {\n\n\tprivate title: string\n\tprivate multiSelect: IsMultiSelect\n\tprivate mimeTypeFilter: string[]\n\tprivate directoriesAllowed: boolean\n\tprivate buttons: IFilePickerButton[] | IFilePickerButtonFactory\n\tprivate path?: string\n\tprivate filter?: IFilePickerFilter\n\tprivate container?: string\n\tprivate disabledNavigation: boolean\n\n\tpublic constructor(title: string,\n\t\tmultiSelect: IsMultiSelect,\n\t\tmimeTypeFilter: string[],\n\t\tdirectoriesAllowed: boolean,\n\t\tbuttons: IFilePickerButton[] | IFilePickerButtonFactory,\n\t\tpath?: string,\n\t\tfilter?: IFilePickerFilter,\n\t\tcontainer?: string,\n\t\tdisabledNavigation = false,\n\t) {\n\t\tthis.title = title\n\t\tthis.multiSelect = multiSelect\n\t\tthis.mimeTypeFilter = mimeTypeFilter\n\t\tthis.directoriesAllowed = directoriesAllowed\n\t\tthis.path = path\n\t\tthis.filter = filter\n\t\tthis.buttons = buttons\n\t\tthis.container = container\n\t\tthis.disabledNavigation = disabledNavigation\n\t}\n\n\t/**\n\t * Pick files using the FilePicker\n\t *\n\t * @return Promise with array of picked files or rejected promise on close without picking\n\t */\n\tpublic async pick(): Promise<IsMultiSelect extends true ? string[] : string> {\n\t\tconst { FilePickerVue } = await import('./components/FilePicker/index')\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tspawnDialog(FilePickerVue, {\n\t\t\t\tallowPickDirectory: this.directoriesAllowed,\n\t\t\t\tbuttons: this.buttons,\n\t\t\t\tcontainer: this.container,\n\t\t\t\tname: this.title,\n\t\t\t\tpath: this.path,\n\t\t\t\tmimetypeFilter: this.mimeTypeFilter,\n\t\t\t\tmultiselect: this.multiSelect,\n\t\t\t\tfilterFn: this.filter,\n\t\t\t\tdisabledNavigation: this.disabledNavigation,\n\t\t\t}, (...rest: unknown[]) => {\n\t\t\t\tconst [nodes] = rest as [nodes: Node[]]\n\t\t\t\tif (!Array.isArray(nodes) || nodes.length === 0) {\n\t\t\t\t\treject(new FilePickerClosed('FilePicker: No nodes selected'))\n\t\t\t\t} else {\n\t\t\t\t\tif (this.multiSelect) {\n\t\t\t\t\t\tresolve((nodes as Node[]).map((node) => node.path) as (IsMultiSelect extends true ? string[] : string))\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve(((nodes as Node[])[0]?.path || '/') as (IsMultiSelect extends true ? string[] : string))\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\n}\n\nexport class FilePickerBuilder<IsMultiSelect extends boolean> {\n\n\tprivate title: string\n\tprivate multiSelect = false\n\tprivate mimeTypeFilter: string[] = []\n\tprivate directoriesAllowed = false\n\tprivate path?: string\n\tprivate filter?: IFilePickerFilter\n\tprivate buttons: IFilePickerButton[] | IFilePickerButtonFactory = []\n\tprivate container?: string\n\tprivate disabledNavigation = false\n\n\t/**\n\t * Construct a new FilePicker\n\t *\n\t * @param title Title of the FilePicker\n\t */\n\tpublic constructor(title: string) {\n\t\tthis.title = title\n\t}\n\n\t/**\n\t * Set the container where the FilePicker will be mounted\n\t * By default 'body' is used\n\t *\n\t * @param container The dialog container\n\t */\n\tpublic setContainer(container: string) {\n\t\tthis.container = container\n\t\treturn this\n\t}\n\n\t/**\n\t * Enable or disable picking multiple files\n\t *\n\t * @param ms True to enable picking multiple files, false otherwise\n\t */\n\tpublic setMultiSelect<T extends boolean>(ms: T) {\n\t\tthis.multiSelect = ms\n\t\treturn this as unknown as FilePickerBuilder<T extends true ? true : false>\n\t}\n\n\t/**\n\t * Add allowed MIME type\n\t *\n\t * @param filter MIME type to allow\n\t */\n\tpublic addMimeTypeFilter(filter: string) {\n\t\tthis.mimeTypeFilter.push(filter)\n\t\treturn this\n\t}\n\n\t/**\n\t * Set allowed MIME types\n\t *\n\t * @param filter Array of allowed MIME types\n\t */\n\tpublic setMimeTypeFilter(filter: string[]) {\n\t\tthis.mimeTypeFilter = filter\n\t\treturn this\n\t}\n\n\t/**\n\t * Add a button to the FilePicker\n\t * Note: This overrides any previous `setButtonFactory` call\n\t *\n\t * @param button The button\n\t */\n\tpublic addButton(button: IFilePickerButton) {\n\t\tif (typeof this.buttons === 'function') {\n\t\t\tconsole.warn('FilePicker buttons were set to factory, now overwritten with button object.')\n\t\t\tthis.buttons = []\n\t\t}\n\t\tthis.buttons.push(button)\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the button factory which is used to generate buttons from current view, path and selected nodes\n\t * Note: This overrides any previous `addButton` call\n\t *\n\t * @param factory The button factory\n\t */\n\tpublic setButtonFactory(factory: IFilePickerButtonFactory) {\n\t\tthis.buttons = factory\n\t\treturn this\n\t}\n\n\t/**\n\t * Set FilePicker type based on legacy file picker types\n\t * @param type The legacy filepicker type to emulate\n\t * @deprecated Use `addButton` or `setButtonFactory` instead as with setType you do not know which button was pressed\n\t */\n\tpublic setType(type: FilePickerType) {\n\t\tthis.buttons = (nodes, path) => {\n\t\t\tconst buttons: IFilePickerButton[] = []\n\t\t\tconst node = nodes?.[0]?.attributes?.displayName || nodes?.[0]?.basename\n\t\t\tconst target = node || basename(path)\n\n\t\t\tif (type === FilePickerType.Choose) {\n\t\t\t\tlet label = t('Choose')\n\t\t\t\tif (nodes.length === 1) {\n\t\t\t\t\tlabel = t('Choose {file}', { file: node })\n\t\t\t\t} else if (this.multiSelect) {\n\t\t\t\t\tlabel = n('Choose %n file', 'Choose %n files', nodes.length)\n\t\t\t\t}\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: () => {},\n\t\t\t\t\ttype: 'primary',\n\t\t\t\t\tlabel,\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (type === FilePickerType.CopyMove || type === FilePickerType.Copy) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: () => {},\n\t\t\t\t\tlabel: target ? t('Copy to {target}', { target }) : t('Copy'),\n\t\t\t\t\ttype: 'primary',\n\t\t\t\t\ticon: IconCopy,\n\t\t\t\t})\n\t\t\t}\n\t\t\tif (type === FilePickerType.Move || type === FilePickerType.CopyMove) {\n\t\t\t\tbuttons.push({\n\t\t\t\t\tcallback: () => {},\n\t\t\t\t\tlabel: target ? t('Move to {target}', { target }) : t('Move'),\n\t\t\t\t\ttype: type === FilePickerType.Move ? 'primary' : 'secondary',\n\t\t\t\t\ticon: IconMove,\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn buttons\n\t\t}\n\n\t\treturn this\n\t}\n\n\t/**\n\t * Allow to pick directories besides files\n\t *\n\t * @param allow True to allow picking directories\n\t */\n\tpublic allowDirectories(allow = true) {\n\t\tthis.directoriesAllowed = allow\n\t\treturn this\n\t}\n\n\t/**\n\t * Set starting path of the FilePicker\n\t *\n\t * @param path Path to start from picking\n\t */\n\tpublic startAt(path: string) {\n\t\tthis.path = path\n\t\treturn this\n\t}\n\n\t/**\n\t * Add filter function to filter file list of FilePicker\n\t *\n\t * @param filter Filter function to apply\n\t */\n\tpublic setFilter(filter: IFilePickerFilter) {\n\t\tthis.filter = filter\n\t\treturn this\n\t}\n\n\t/**\n\t * Allow to pick directories besides files\n\t *\n\t * @param allow True to allow picking directories\n\t */\n\tpublic disableNavigation() {\n\t\tthis.disabledNavigation = true\n\t\treturn this\n\t}\n\n\t/**\n\t * Construct the configured FilePicker\n\t */\n\tpublic build() {\n\t\treturn new FilePicker<IsMultiSelect>(\n\t\t\tthis.title,\n\t\t\tthis.multiSelect as IsMultiSelect,\n\t\t\tthis.mimeTypeFilter,\n\t\t\tthis.directoriesAllowed,\n\t\t\tthis.buttons,\n\t\t\tthis.path,\n\t\t\tthis.filter,\n\t\t\tthis.container,\n\t\t\tthis.disabledNavigation,\n\t\t)\n\t}\n\n}\n\n/**\n *\n * @param title Title of the file picker\n */\nexport function getFilePickerBuilder(title: string): FilePickerBuilder<boolean> {\n\treturn new FilePickerBuilder(title)\n}\n","/**\n * SPDX-FileCopyrightText: 2023 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { Node } from '@nextcloud/files'\n\nexport enum DialogSeverity {\n\tInfo = 'info',\n\tWarning = 'warning',\n\tError = 'error',\n}\n\n/**\n * Interface for defining buttons passed to the Dialog component\n * See NcDialogButton\n */\nexport interface IDialogButton {\n\t/** Label of the button */\n\tlabel: string,\n\n\t/** Callback on button click */\n\tcallback: () => void,\n\n\t/**\n\t * Optional Icon for the button\n\t * Should be a SVG image as raw string\n\t */\n\ticon?: string,\n\n\t/**\n\t * Button type\n\t * @see https://nextcloud-vue-components.netlify.app/#/Components/NcButton\n\t */\n\ttype?: 'primary' | 'secondary' | 'error' | 'warning' | 'success'\n\n\t/**\n\t * Disabled state of the button\n\t * @default false\n\t */\n\tdisabled?: boolean\n}\n\n/**\n * Interface to define buttons of the FilePicker component\n * The buttons are based on the Dialog buttons but the callback gets the array of selected nodes\n */\nexport interface IFilePickerButton extends Omit<IDialogButton, 'callback'> {\n\t/**\n\t * Callback on button click\n\t *\n\t * @param nodes Array of `@nextcloud/files` Nodes that were selected\n\t */\n\tcallback: (nodes: Node[]) => void\n}\n\nexport type IFilePickerButtonFactory = (selectedNodes: Node[], currentPath: string, currentView: string) => IFilePickerButton[]\n\n/**\n * Type of filter functions to filter the FilePicker's file list\n */\nexport type IFilePickerFilter = (node: Node) => boolean\n","<!--\n  - SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n  - SPDX-License-Identifier: AGPL-3.0-or-later\n-->\n<template>\n\t<NcDialog dialog-classes=\"nc-generic-dialog\"\n\t\t:buttons=\"buttons\"\n\t\t:name=\"name\"\n\t\t:message=\"text\"\n\t\t@update:open=\"$emit('close')\">\n\t\t<NcNoteCard v-if=\"severity\" :type=\"severity\">\n\t\t\t<p v-text=\"text\" />\n\t\t</NcNoteCard>\n\t\t<!-- eslint-disable-next-line vue/no-v-html -->\n\t\t<div v-if=\"html\" v-html=\"html\" />\n\t</NcDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport type { IDialogButton } from './types'\n\nimport { onMounted, onUnmounted } from 'vue'\nimport { DialogSeverity } from './types'\n\nimport NcDialog from '@nextcloud/vue/dist/Components/NcDialog.js'\nimport NcNoteCard from '@nextcloud/vue/dist/Components/NcNoteCard.js'\n\nconst props = defineProps<{\n\t/**\n\t * Headline of the dialog\n\t */\n\tname: string\n\n\t/**\n\t * Main text of the dialog\n\t */\n\ttext: string\n\n\t/**\n\t * HTML content\n\t * @deprecated DO NOT USE! This is just for backwards compatibility and will be removed in the near future!\n\t */\n\thtml?: string\n\n\t/**\n\t * Buttons on the dialog\n\t */\n\tbuttons?: IDialogButton[]\n\n\t/**\n\t * Severity of the dialog - if a notecard is used\n\t */\n\tseverity?: DialogSeverity\n}>()\n\n/**\n * Handler used to ensure the message is also shown when the page is unloaded\n * This is for backwards compatibility with OC.dialogs\n */\nconst handleUnload = () => `${props.name}: ${props.text}`\n\nonMounted(() => window.addEventListener('unload', handleUnload))\nonUnmounted(() => window.removeEventListener('unload', handleUnload))\n</script>\n\n<style>\n.nc-generic-dialog .dialog__actions {\n\tjustify-content: space-between;\n\tmin-width: calc(100% - 12px);\n}\n</style>\n","/**\n * SPDX-FileCopyrightText: 2024 Nextcloud GmbH and Nextcloud contributors\n * SPDX-License-Identifier: AGPL-3.0-or-later\n */\n\nimport type { IDialogButton } from './components/types'\nimport type Vue from 'vue'\n\nimport { DialogSeverity } from './components/types'\nimport { spawnDialog } from './utils/dialogs'\nimport GenericDialog from './components/GenericDialog.vue'\n\nexport { DialogSeverity } from './components/types'\n\n/**\n * This class provides generic Nextcloud themed dialogs\n */\nexport class Dialog {\n\n\t#name: string\n\t#text: string\n\t#buttons: IDialogButton[]\n\t#severity?: DialogSeverity\n\t#dialog?: Vue\n\n\t/** @deprecated */\n\t#html?: string\n\n\tconstructor(\n\t\tname: string,\n\t\ttext: string,\n\t\tbuttons: IDialogButton[] = [],\n\t\tseverity?: DialogSeverity,\n\t) {\n\t\tthis.#name = name\n\t\tthis.#text = text\n\t\tthis.#buttons = buttons\n\t\tthis.#severity = severity\n\t\tthis.#dialog = undefined\n\t\tthis.#html = undefined\n\t}\n\n\t/**\n\t * @deprecated DO NOT USE! It will be removed in the near future!\n\t * @param html HTML content\n\t */\n\tsetHTML(html: string) {\n\t\tthis.#html = html\n\t\treturn this\n\t}\n\n\t/**\n\t * Spawn and show the dialog - if already open the previous instance will be destroyed\n\t * @return Promise that resolves when the dialog is answered successfully and rejects on close\n\t */\n\tshow() {\n\t\tif (this.#dialog) {\n\t\t\tthis.#dialog.$destroy()\n\t\t}\n\n\t\treturn new Promise((resolve) => {\n\t\t\tthis.#dialog = spawnDialog(GenericDialog,\n\t\t\t\t{\n\t\t\t\t\tbuttons: this.#buttons,\n\t\t\t\t\tname: this.#name,\n\t\t\t\t\ttext: this.#text,\n\t\t\t\t\tseverity: this.#severity,\n\t\t\t\t\thtml: this.#html,\n\t\t\t\t},\n\t\t\t\tresolve,\n\t\t\t)\n\t\t})\n\t}\n\n\t/**\n\t * Hide and destroy the current dialog instance\n\t */\n\thide() {\n\t\tthis.#dialog?.$destroy()\n\t}\n\n}\n\n/**\n * The DialogBuilder provides an easy to use interface for creating simple dialogs in consistent Nextcloud design\n *\n * @example\n * ```ts\n * // It is recommended to use `getDialogBuilder` instead\n * const dialogBuilder = new DialogBuilder('The dialog title')\n * const dialog = dialogBuilder\n *     .setText('The dialog message')\n *     .setSeverity(DialogSeverity.Warning)\n *     .addButton({\n *         label: 'Ok',\n *         callback: () => console.warn('Warning was dismissed'),\n *     })\n *     .build()\n * ```\n */\nexport class DialogBuilder {\n\n\t#severity?: DialogSeverity\n\t#text: string\n\t#name: string\n\t#buttons: IDialogButton[]\n\n\tconstructor(name?: string) {\n\t\tthis.#severity = undefined\n\t\tthis.#text = ''\n\t\tthis.#name = name ?? ''\n\t\tthis.#buttons = []\n\t}\n\n\t/**\n\t * Set dialog name\n\t * @param name The name or headline of the dialog\n\t */\n\tsetName(name: string) {\n\t\tthis.#name = name\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the dialog text\n\t * @param text Main text of the dialog\n\t */\n\tsetText(text: string) {\n\t\tthis.#text = text\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the severity of the dialog\n\t * @param severity Severity of the dialog\n\t */\n\tsetSeverity(severity: DialogSeverity) {\n\t\tthis.#severity = severity\n\t\treturn this\n\t}\n\n\t/**\n\t * Set buttons from array\n\t * @param buttons Either an array of dialog buttons\n\t */\n\tsetButtons(buttons: IDialogButton[]) {\n\t\tif (this.#buttons.length > 0) {\n\t\t\tconsole.warn('[@nextcloud/dialogs] Dialog buttons are already set - this overrides previous buttons.')\n\t\t}\n\t\tthis.#buttons = buttons\n\t\treturn this\n\t}\n\n\t/**\n\t * Add a single button\n\t * @param button Button to add\n\t */\n\taddButton(button: IDialogButton) {\n\t\tthis.#buttons.push(button)\n\t\treturn this\n\t}\n\n\tbuild() {\n\t\treturn new Dialog(this.#name, this.#text, this.#buttons, this.#severity)\n\t}\n\n}\n\n/**\n * Get the dialog builder to create a new dialog\n *\n * @param name The name of the dialog (title)\n * @example\n * ```ts\n * const dialog = getDialogBuilder('Confirm action')\n *     .addButton({\n *         label: 'Ok',\n *         callback: () => console.warn('confirmed'),\n *     })\n *     .build()\n * ```\n */\nexport function getDialogBuilder(name: string) {\n\treturn new DialogBuilder(name)\n}\n"],"names":["h","FilePickerType","DialogSeverity","_severity","_text","_name","_buttons"],"mappings":";;;;;;AAgBO,MAAM,cAAc,CAAC,QAAoC,OAAY,UAAwC,MAAM;AAAC,MAAW;AAC/H,QAAA,KAAK,SAAS,cAAc,KAAK;AAEvC,QAAM,YAAyB,SAAS,cAAc,SAAO,OAAA,SAAA,MAAA,SAAS,KAAK,SAAS;AACpF,YAAU,YAAY,EAAE;AAElB,QAAA,MAAM,IAAI,IAAI;AAAA,IACnB;AAAA,IACA,MAAM;AAAA,IACN,QAAQ,CAACA,OACRA,GAAE,QAAQ;AAAA,MACT;AAAA,MACA,IAAI;AAAA,QACH,OAAO,IAAI,SAAoB;AAC9B,kBAAQ,GAAG,KAAK,IAAI,OAAK,MAAM,CAAC,CAAC,CAAC;AAClC,cAAI,SAAS;AAAA,QACd;AAAA,MACD;AAAA,IAAA,CACA;AAAA,EAAA,CACF;AACM,SAAA;AACR;ACrCA,MAAe,WAAA;ACAf,MAAe,WAAA;;;;ACkBH,IAAA,mCAAAC,oBAAL;AACNA,kBAAAA,gBAAA,YAAS,CAAT,IAAA;AACAA,kBAAAA,gBAAA,UAAO,CAAP,IAAA;AACAA,kBAAAA,gBAAA,UAAO,CAAP,IAAA;AACAA,kBAAAA,gBAAA,cAAW,CAAX,IAAA;AACAA,kBAAAA,gBAAA,YAAS,CAAT,IAAA;AALWA,SAAAA;AAAA,GAAA,kBAAA,CAAA,CAAA;AAWL,MAAM,yBAAyB,MAAM;AAAC;AAEtC,MAAM,WAA0C;AAAA,EAY/C,YAAY,OAClB,aACA,gBACA,oBACA,SACA,MACA,QACA,WACA,qBAAqB,OACpB;AAnBM,kBAAA,MAAA,OAAA;AACA,kBAAA,MAAA,aAAA;AACA,kBAAA,MAAA,gBAAA;AACA,kBAAA,MAAA,oBAAA;AACA,kBAAA,MAAA,SAAA;AACA,kBAAA,MAAA,MAAA;AACA,kBAAA,MAAA,QAAA;AACA,kBAAA,MAAA,WAAA;AACA,kBAAA,MAAA,oBAAA;AAYP,SAAK,QAAQ;AACb,SAAK,cAAc;AACnB,SAAK,iBAAiB;AACtB,SAAK,qBAAqB;AAC1B,SAAK,OAAO;AACZ,SAAK,SAAS;AACd,SAAK,UAAU;AACf,SAAK,YAAY;AACjB,SAAK,qBAAqB;AAAA,EAC3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,MAAa,OAAgE;AAC5E,UAAM,EAAE,cAAA,IAAkB,MAAM,OAAO,6BAA+B;AAEtE,WAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvC,kBAAY,eAAe;AAAA,QAC1B,oBAAoB,KAAK;AAAA,QACzB,SAAS,KAAK;AAAA,QACd,WAAW,KAAK;AAAA,QAChB,MAAM,KAAK;AAAA,QACX,MAAM,KAAK;AAAA,QACX,gBAAgB,KAAK;AAAA,QACrB,aAAa,KAAK;AAAA,QAClB,UAAU,KAAK;AAAA,QACf,oBAAoB,KAAK;AAAA,MAAA,GACvB,IAAI,SAAoB;AAnF9B,YAAA;AAoFU,cAAA,CAAC,KAAK,IAAI;AAChB,YAAI,CAAC,MAAM,QAAQ,KAAK,KAAK,MAAM,WAAW,GAAG;AACzC,iBAAA,IAAI,iBAAiB,+BAA+B,CAAC;AAAA,QAAA,OACtD;AACN,cAAI,KAAK,aAAa;AACrB,oBAAS,MAAiB,IAAI,CAAC,SAAS,KAAK,IAAI,CAAqD;AAAA,UAAA,OAChG;AACN,sBAAU,KAAiB,MAAA,CAAC,MAAlB,OAAA,SAAA,GAAqB,SAAQ,GAAwD;AAAA,UAChG;AAAA,QACD;AAAA,MAAA,CACA;AAAA,IAAA,CACD;AAAA,EACF;AAED;AAEO,MAAM,kBAAiD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAiBtD,YAAY,OAAe;AAf1B,kBAAA,MAAA,OAAA;AACR,kBAAA,MAAQ,eAAc,KAAA;AACtB,kBAAA,MAAQ,kBAA2B,CAAA,CAAC;AACpC,kBAAA,MAAQ,sBAAqB,KAAA;AACrB,kBAAA,MAAA,MAAA;AACA,kBAAA,MAAA,QAAA;AACR,kBAAA,MAAQ,WAA0D,CAAA,CAAC;AAC3D,kBAAA,MAAA,WAAA;AACR,kBAAA,MAAQ,sBAAqB,KAAA;AAQ5B,SAAK,QAAQ;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQO,aAAa,WAAmB;AACtC,SAAK,YAAY;AACV,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,eAAkC,IAAO;AAC/C,SAAK,cAAc;AACZ,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,kBAAkB,QAAgB;AACnC,SAAA,eAAe,KAAK,MAAM;AACxB,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,kBAAkB,QAAkB;AAC1C,SAAK,iBAAiB;AACf,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQO,UAAU,QAA2B;AACvC,QAAA,OAAO,KAAK,YAAY,YAAY;AACvC,cAAQ,KAAK,6EAA6E;AAC1F,WAAK,UAAU;IAChB;AACK,SAAA,QAAQ,KAAK,MAAM;AACjB,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQO,iBAAiB,SAAmC;AAC1D,SAAK,UAAU;AACR,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,QAAQ,MAAsB;AAC/B,SAAA,UAAU,CAAC,OAAO,SAAS;AAlMlC,UAAA,IAAA,IAAA;AAmMG,YAAM,UAA+B,CAAA;AAC/B,YAAA,SAAO,0CAAQ,CAAR,MAAA,OAAA,SAAA,GAAY,eAAZ,OAAwB,SAAA,GAAA,kBAAe,KAAQ,SAAA,OAAA,SAAA,MAAA,CAAA,MAAR,OAAY,SAAA,GAAA;AAC1D,YAAA,SAAS,QAAQ,SAAS,IAAI;AAEpC,UAAI,SAAS,GAAuB;AAC/B,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,MAAM,WAAW,GAAG;AACvB,kBAAQ,EAAE,iBAAiB,EAAE,MAAM,KAAM,CAAA;AAAA,QAAA,WAC/B,KAAK,aAAa;AAC5B,kBAAQ,EAAE,kBAAkB,mBAAmB,MAAM,MAAM;AAAA,QAC5D;AACA,gBAAQ,KAAK;AAAA,UACZ,UAAU,MAAM;AAAA,UAAC;AAAA,UACjB,MAAM;AAAA,UACN;AAAA,QAAA,CACA;AAAA,MACF;AACI,UAAA,SAAS,KAA2B,SAAS,GAAqB;AACrE,gBAAQ,KAAK;AAAA,UACZ,UAAU,MAAM;AAAA,UAAC;AAAA,UACjB,OAAO,SAAS,EAAE,oBAAoB,EAAE,QAAQ,IAAI,EAAE,MAAM;AAAA,UAC5D,MAAM;AAAA,UACN,MAAM;AAAA,QAAA,CACN;AAAA,MACF;AACI,UAAA,SAAS,KAAuB,SAAS,GAAyB;AACrE,gBAAQ,KAAK;AAAA,UACZ,UAAU,MAAM;AAAA,UAAC;AAAA,UACjB,OAAO,SAAS,EAAE,oBAAoB,EAAE,QAAQ,IAAI,EAAE,MAAM;AAAA,UAC5D,MAAM,SAAS,IAAsB,YAAY;AAAA,UACjD,MAAM;AAAA,QAAA,CACN;AAAA,MACF;AACO,aAAA;AAAA,IAAA;AAGD,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,iBAAiB,QAAQ,MAAM;AACrC,SAAK,qBAAqB;AACnB,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,QAAQ,MAAc;AAC5B,SAAK,OAAO;AACL,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,UAAU,QAA2B;AAC3C,SAAK,SAAS;AACP,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOO,oBAAoB;AAC1B,SAAK,qBAAqB;AACnB,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA,EAKO,QAAQ;AACd,WAAO,IAAI;AAAA,MACV,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,MACL,KAAK;AAAA,IAAA;AAAA,EAEP;AAED;AAMO,SAAS,qBAAqB,OAA2C;AACxE,SAAA,IAAI,kBAAkB,KAAK;AACnC;ACpSY,IAAA,mCAAAC,oBAAL;AACNA,kBAAA,MAAO,IAAA;AACPA,kBAAA,SAAU,IAAA;AACVA,kBAAA,OAAQ,IAAA;AAHGA,SAAAA;AAAA,GAAA,kBAAA,CAAA,CAAA;;;;;;;;;;;;ACoDZ,UAAM,eAAe,MAAM,GAAG,OAAM,MAAA,MAAI,MAAK,OAAM,MAAA,IAAA;AAEnD,cAAU,MAAM,OAAO,iBAAiB,UAAU,YAAY,CAAC;AAC/D,gBAAY,MAAM,OAAO,oBAAoB,UAAU,YAAY,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DpE,IAAAC,OAAAA,OAAAA,UAAAA,WAAAA,SAAAA,OAAAA,YAAAC,QAAAC,QAAAC;AAiBO,MAAM,OAAO;AAAA,EAWnB,YACC,MACA,MACA,UAA2B,CAAA,GAC3B,UACC;AAdF,iBAAA,MAAA,KAAA;AACA,iBAAA,MAAA,KAAA;AACA,iBAAA,MAAA,QAAA;AACA,iBAAA,MAAA,SAAA;AACA,iBAAA,MAAA,OAAA;AAGA,iBAAA,MAAA,KAAA;AAQC,iBAAA,MAAK,OAAQ,IAAA;AACb,iBAAA,MAAK,OAAQ,IAAA;AACb,iBAAA,MAAK,UAAW,OAAA;AAChB,iBAAA,MAAK,WAAY,QAAA;AACjB,iBAAA,MAAK,SAAU,MAAA;AACf,iBAAA,MAAK,OAAQ,MAAA;AAAA,EACd;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,MAAc;AACrB,iBAAA,MAAK,OAAQ,IAAA;AACN,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,OAAO;AACN,QAAI,mBAAK,OAAS,GAAA;AACjB,mBAAA,MAAK,SAAQ,SAAS;AAAA,IACvB;AAEO,WAAA,IAAI,QAAQ,CAAC,YAAY;AAC/B,mBAAA,MAAK,SAAU;AAAA,QAAY;AAAA,QAC1B;AAAA,UACC,SAAS,aAAK,MAAA,QAAA;AAAA,UACd,MAAM,aAAK,MAAA,KAAA;AAAA,UACX,MAAM,aAAK,MAAA,KAAA;AAAA,UACX,UAAU,aAAK,MAAA,SAAA;AAAA,UACf,MAAM,aAAK,MAAA,KAAA;AAAA,QACZ;AAAA,QACA;AAAA,MAAA,CACD;AAAA,IAAA,CACA;AAAA,EACF;AAAA;AAAA;AAAA;AAAA,EAKA,OAAO;AA7ER,QAAA;AA8EE,KAAA,KAAA,aAAA,MAAK,aAAL,OAAc,SAAA,GAAA;EACf;AAED;AA9DC,QAAA,oBAAA,QAAA;AACA,QAAA,oBAAA,QAAA;AACA,WAAA,oBAAA,QAAA;AACA,YAAA,oBAAA,QAAA;AACA,UAAA,oBAAA,QAAA;AAGA,QAAA,oBAAA,QAAA;AA0EM,MAAM,cAAc;AAAA,EAO1B,YAAY,MAAe;AAL3BH,iBAAAA,MAAAA,UAAAA;AACAC,iBAAAA,MAAAA,MAAAA;AACAC,iBAAAA,MAAAA,MAAAA;AACAC,iBAAAA,MAAAA,SAAAA;AAGC,iBAAA,MAAKH,YAAY,MAAA;AACjB,iBAAA,MAAKC,QAAQ,EAAA;AACb,iBAAA,MAAKC,QAAQ,QAAQ,OAAA,OAAA,EAAA;AACrB,iBAAA,MAAKC,WAAW,CAAA,CAAC;AAAA,EAClB;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,MAAc;AACrB,iBAAA,MAAKD,QAAQ,IAAA;AACN,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,QAAQ,MAAc;AACrB,iBAAA,MAAKD,QAAQ,IAAA;AACN,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,YAAY,UAA0B;AACrC,iBAAA,MAAKD,YAAY,QAAA;AACV,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,WAAW,SAA0B;AAChC,QAAA,aAAA,MAAKG,SAAS,EAAA,SAAS,GAAG;AAC7B,cAAQ,KAAK,wFAAwF;AAAA,IACtG;AACA,iBAAA,MAAKA,WAAW,OAAA;AACT,WAAA;AAAA,EACR;AAAA;AAAA;AAAA;AAAA;AAAA,EAMA,UAAU,QAAuB;AAC3BA,iBAAAA,MAAAA,SAAAA,EAAS,KAAK,MAAM;AAClB,WAAA;AAAA,EACR;AAAA,EAEA,QAAQ;AACA,WAAA,IAAI,OAAO,aAAKD,MAAAA,MAAAA,GAAO,mBAAKD,MAAO,GAAA,aAAA,MAAKE,SAAU,GAAA,aAAA,MAAKH,UAAS,CAAA;AAAA,EACxE;AAED;AAhECA,aAAA,oBAAA,QAAA;AACAC,SAAA,oBAAA,QAAA;AACAC,SAAA,oBAAA,QAAA;AACAC,YAAA,oBAAA,QAAA;AA6EM,SAAS,iBAAiB,MAAc;AACvC,SAAA,IAAI,cAAc,IAAI;AAC9B;","x_google_ignoreList":[1,2]}